```{=html}
<div id="graph" style="width: 100%; height: 400px;"></div>

<script type="text/jsx">
  function genRandomTree(N = 100, reverse = false) {
  return {
    nodes: [...Array(N).keys()].map(i => ({ id: i })),
      links: [...Array(N).keys()]
    .filter(id => id)
    .map(id => ({
      [reverse ? 'target' : 'source']: id,
      [reverse ? 'source' : 'target']: Math.round(Math.random() * (id-1))
    }))
  };
}
  const { useRef } = React;

  const data = genRandomTree();
  const graphContainer = document.getElementById('graph');
  const graph = document.getElementById('3d-graph');
  const infobox = document.getElementById('infobox');

  const Graph = () => {
    const fgRef = useRef();

    return <ForceGraph2D
      ref={fgRef}
      graphData={data}
      cooldownTicks={100}
      onEngineStop={() => fgRef.current.zoomToFit(400)}
      width={graphContainer.clientWidth}
      height={graphContainer.clientHeight}
    />;
  };

  ReactDOM.render(
    <Graph />,
    document.getElementById('graph')
  );
</script>
```